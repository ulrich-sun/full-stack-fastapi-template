version: "3.8"

services:
  db:
    image: postgres:12
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 10s
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_PASSWORD=MonMotDePasseComplexe123!  # Mot de passe sécurisé
      - POSTGRES_USER=postgres
      - POSTGRES_DB=app
    networks:
      - default

  adminer:
    image: adminer
    restart: always
    ports:
      - "8080:8080"  # Expose Adminer sur le port 8080
    networks:
      - default
    depends_on:
      - db
    environment:
      - ADMINER_DESIGN=pepa-linha-dark

  prestart:
    # image: backend
    networks:
      - default
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
        restart: true
    command: bash -c "chmod +x scripts/prestart.sh && scripts/prestart.sh"
    environment:
      - PROJECT_NAME="Full Stack FastAPI Project"
      - STACK_NAME=full-stack-fastapi-project
      - DOMAIN=54.145.2.23
      - FRONTEND_HOST=http://54.145.2.23
      - ENVIRONMENT=local
      - BACKEND_CORS_ORIGINS=http://54.145.2.23,http://54.145.2.23:5173
      - SECRET_KEY=GLhte1DuGv1ciRd2Zfc2kHMqTzLCdNR76yoV9Ae4jBM
      - FIRST_SUPERUSER=admin@example.com
      - FIRST_SUPERUSER_PASSWORD=changethis
      - SMTP_HOST=smtp.gmail.com
      - SMTP_USER=ulrich
      - SMTP_PASSWORD=suntuto.shop
      - EMAILS_FROM_EMAIL=info@example.com
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=MonMotDePasseComplexe123!  # Doit correspondre à celui de `db`
      - SENTRY_DSN=

  backend:
    # image: backend
    restart: always
    networks:
      - default
    build:
      context: ./backend
    depends_on:
      db:
        condition: service_healthy
        restart: true
      prestart:
        condition: service_completed_successfully
    environment:
      - PROJECT_NAME="Full Stack FastAPI Project"
      - STACK_NAME=full-stack-fastapi-project
      - DOMAIN=54.145.2.23
      - FRONTEND_HOST=http://54.145.2.23:5173
      - ENVIRONMENT=local
      - BACKEND_CORS_ORIGINS=http://54.145.2.23,http://54.145.2.23:5173
      - SECRET_KEY=xv7hTRWtCNnufueGNwV0yZ6_1AH4wxGYABGRlYpRxo8
      - FIRST_SUPERUSER=admin@example.com
      - FIRST_SUPERUSER_PASSWORD=changethis
      - SMTP_HOST=smtp.gmail.com
      - SMTP_USER=ulrich
      - SMTP_PASSWORD=suntuto.shop
      - EMAILS_FROM_EMAIL=info@example.com
      - POSTGRES_SERVER=db
      - POSTGRES_PORT=5432
      - POSTGRES_DB=app
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=MonMotDePasseComplexe123!  # Doit correspondre à celui de `db`
      - SENTRY_DSN=
    healthcheck:
      test: ["CMD", "curl", "-f", "http://54.145.2.23:8000/api/v1/utils/health-check/"]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "8000:8000"

  frontend:
    # image: '${DOCKER_IMAGE_FRONTEND?Variable not set}:${TAG-latest}'
    image: frontend
    restart: always
    ports:
      - "5173:80"
    networks:
      - traefik-public
      - default
        #build:
        #context: ./frontend
        #args:
        #- VITE_API_URL=http://54.145.2.23:8000
        #- NODE_ENV=production
    environment:
      - VITE_API_URL=http://54.145.2.23:8000 # Doit correspondre à `build.args`
      - NODE_ENV=production

volumes:
  app-db-data:

networks:
  default:
  traefik-public:
    external: true
